{"version":3,"file":"static/js/349.4304b5b3.chunk.js","mappings":"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","sources":["components/PhonebookForm/Phonebook.styled.js","components/Section/Sectio.styled.js","components/Section/Section.js","redux/contacts/selectors.js","components/Spinner/Spinner.styled.js","components/Spinner/Spinner.js","components/PhonebookForm/PhonebookForm.js","components/Contacts/Contacts.styled.js","components/ButtonDelete/ButtonDelete.styled.js","components/ButtonDelete/ButtonDelete.js","components/Contacts/Contacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Message/Message.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const Label = styled.label`\n  display: inline-block;\n\n  /* & :last-child {\n    color: red;\n    margin-bottom: ${p => p.theme.space[4]}px;\n  } */\n`;\n\nexport const Input = styled(Field)`\n  padding: ${p => p.theme.space[0]} ${p => p.theme.space[3]}px;\n  width: 320px;\n  height: 30px;\n  font-size: ${p => p.theme.fontSizes.s};\n  border: ${p => p.theme.borders.m};\n  border-radius: ${p => p.theme.radii.sm};\n  border-color: ${p => p.theme.colors.bgSecondary};\n\n  &:focus-within {\n    border-color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const LabelName = styled.p`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\n// export const AddButton = styled.button`\n//   display: flex;\n//   justify-content: center;\n//   padding: ${p => p.theme.space[3]}px;\n//   margin-top: ${p => p.theme.space[4]}px;\n//   border-radius: ${p => p.theme.radii.sm};\n//   cursor: pointer;\n\n//   &:active {\n//     background-color: ${p => p.theme.colors.accent};\n//   }\n// `;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.red};\n  font-size: ${p => p.theme.fontSizes.xs};\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n","import { Box } from 'components/Box/Box';\nimport PropTypes from 'prop-types';\nimport { Title } from './Sectio.styled';\n\nexport const Section = ({ title, children }) => (\n  <Box as=\"section\" p={4} mx=\"auto\" width=\"400px\" position=\"relative\">\n    <Title>{title}</Title>\n    {children}\n  </Box>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilterName = state => state.contacts.filter;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectErrorMessage = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterName],\n  (contacts, filterName) => {\n    const filterNameNormalized = filterName.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterNameNormalized)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const SpinnerWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24px;\n  height: 24px;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { SpinnerWrap } from './Spinner.styled';\n\nexport const Spinner = ({ loading, size }) => {\n  return (\n    <SpinnerWrap>\n      <RotatingLines\n        strokeColor=\"#ffffff\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width={size}\n        visible={loading}\n      />\n    </SpinnerWrap>\n  );\n};\n","import { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport * as yup from 'yup';\nimport { LabelName, Input, ErrorText, Label } from './Phonebook.styled';\nimport { useSelector } from 'react-redux';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Button } from 'components/Button/Button';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .strict()\n    .trim()\n    .min(1)\n    .max(30)\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces'\n    )\n    .required(),\n  number: yup\n    .string()\n    .strict()\n    .trim()\n    .matches(\n      /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{2}\\)?)\\s?-?\\s?(\\(?\\d{2}\\)?)?$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const PhonebookForm = ({ onAddContact, onReviewName }) => {\n  const loading = useSelector(selectLoading);\n  const handleSubmit = (values, actions) => {\n    if (onReviewName(values.name)) {\n      alert(`${values.name} is already in contacts.`);\n      return;\n    }\n\n    onAddContact({ ...values });\n    actions.resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Label htmlFor=\"name\">\n          <LabelName>Name</LabelName>\n          <Input autoComplete=\"off\" type=\"text\" name=\"name\" />\n          <ErrorText component=\"p\" name=\"name\" />\n        </Label>\n        <Label htmlFor=\"number\">\n          <LabelName>Phone</LabelName>\n          <Input type=\"tel\" name=\"number\" />\n          <ErrorText component=\"p\" name=\"number\" />\n        </Label>\n        <Button disabled={loading}>\n          Add contact\n          <Spinner loading={loading} size=\"24\" />\n        </Button>\n        {/* <AddButton type=\"submit\" disabled={loading}>\n          Add contact\n        </AddButton> */}\n      </Form>\n    </Formik>\n  );\n};\n\nPhonebookForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  onReviewName: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Number = styled.p`\n  margin-top: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n\nexport const ContactCard = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 300px;\n  padding: ${p => p.theme.space[3]}px;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  /* padding: ${p => p.theme.space[2]}px; */\n  border-radius: ${p => p.theme.radii.round};\n  border: ${p => p.theme.borders.none};\n  background-color: ${p => p.theme.colors.bgSecondary};\n  box-shadow: 2px 2px 6px 0px rgba(0, 0, 0, 0.46);\n  cursor: pointer;\n\n  &:active {\n    background-color: ${p => p.theme.colors.accent};\n    box-shadow: none;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from './ButtonDelete.styled';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport { selectErrorMessage } from 'redux/contacts/selectors';\n\nexport const ButtonDelete = ({ onRemoveContact, id, children }) => {\n  const [loading, setLoading] = useState(false);\n  const error = useSelector(selectErrorMessage);\n  if (error) {\n    setLoading(false);\n  }\n  return (\n    <Button\n      type=\"button\"\n      disabled={loading}\n      onClick={() => {\n        setLoading(true);\n        onRemoveContact(id);\n      }}\n    >\n      <Spinner loading={loading} size={'24'} />\n      {children}\n    </Button>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box/Box';\nimport * as SC from './Contacts.styled';\nimport { ButtonDelete } from 'components/ButtonDelete/ButtonDelete';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n// import { AiOutlineDelete } from 'react-icons/ai/index.esm';\nimport { VscClose } from 'react-icons/vsc/index.esm';\n\nexport const Contacts = ({ onRemoveContact }) => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <Box as=\"ul\" py={4}>\n      {visibleContacts.map(({ name, number, id }) => (\n        <SC.ContactCard key={id}>\n          <div>\n            <h3>{name}</h3>\n            <SC.Number>{number}</SC.Number>\n          </div>\n          <ButtonDelete onRemoveContact={onRemoveContact} id={id}>\n            <VscClose />\n          </ButtonDelete>\n        </SC.ContactCard>\n      ))}\n    </Box>\n  );\n};\n\nContacts.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FilterHeader = styled.p`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const Input = styled.input`\n  padding: ${p => p.theme.space[0]} ${p => p.theme.space[3]}px;\n  width: 320px;\n  height: 30px;\n  font-size: ${p => p.theme.fontSizes.s};\n  border: ${p => p.theme.borders.m};\n  border-radius: ${p => p.theme.radii.sm};\n  border-color: ${p => p.theme.colors.bgSecondary};\n\n  &:focus-within {\n    border-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport * as SC from './Filter.styled';\n\nexport const Filter = ({ filterHeader, value, onChange }) => {\n  return (\n    <>\n      <label htmlFor=\"filter\">\n        <SC.FilterHeader>{filterHeader}</SC.FilterHeader>\n        <SC.Input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  filterHeader: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box/Box';\n\nexport const Message = ({ message }) => {\n  return (\n    <Box as=\"p\" p={4} color={'red'}>\n      {message}\n    </Box>\n  );\n};\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Section } from 'components/Section/Section';\nimport { PhonebookForm } from 'components/PhonebookForm/PhonebookForm';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\n// import { Spinner } from 'components/Spinner/Spinner';\nimport { filter } from 'redux/contacts/contactsSlice';\nimport { operations, selectors } from 'redux/contacts';\nimport { Message } from 'components/Message/Message';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectors.selectContacts);\n  const name = useSelector(selectors.selectFilterName);\n  // const loading = useSelector(selectors.selectLoading);\n  const messageError = useSelector(selectors.selectErrorMessage);\n  const visibleContacts = useSelector(selectors.selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  const reviewNameInContacts = name => {\n    return contacts.find(contact => contact.name === name);\n  };\n\n  const addContact = contact => {\n    dispatch(operations.addNewContact(contact));\n  };\n\n  const removeContact = removeContactId => {\n    dispatch(operations.deleteContact(removeContactId));\n  };\n\n  const changeFilter = e => {\n    dispatch(filter(e.currentTarget.value.trimStart()));\n  };\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <PhonebookForm\n          onAddContact={addContact}\n          onReviewName={reviewNameInContacts}\n        />\n        {/* <Spinner loading={loading} size={'56'} /> */}\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter\n          filterHeader=\"Find contacts by name\"\n          value={name}\n          onChange={changeFilter}\n        />\n        {messageError && <Message message={messageError} />}\n        {visibleContacts.length > 0 && (\n          <Contacts onRemoveContact={removeContact} />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Label","styled","p","theme","space","Input","Field","fontSizes","s","borders","m","radii","sm","colors","bgSecondary","accent","LabelName","ErrorText","ErrorMessage","red","xs","Title","Section","title","children","Box","as","mx","width","position","selectContacts","state","contacts","items","selectFilterName","filter","selectLoading","isLoading","selectErrorMessage","error","selectVisibleContacts","createSelector","filterName","filterNameNormalized","toLowerCase","contact","name","includes","SpinnerWrap","Spinner","loading","size","strokeColor","strokeWidth","animationDuration","visible","schema","yup","shape","strict","trim","min","max","matches","required","number","initialValues","PhonebookForm","onAddContact","onReviewName","useSelector","validationSchema","onSubmit","values","actions","alert","resetForm","htmlFor","autoComplete","type","component","Button","disabled","Number","ContactCard","round","none","ButtonDelete","onRemoveContact","id","useState","setLoading","onClick","Contacts","visibleContacts","py","map","FilterHeader","Filter","filterHeader","value","onChange","Message","message","color","dispatch","useDispatch","selectors","messageError","useEffect","operations","fetchContacts","addNewContact","find","e","currentTarget","trimStart","length","removeContactId","deleteContact"],"sourceRoot":""}