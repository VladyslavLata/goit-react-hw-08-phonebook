{"version":3,"file":"static/js/349.b29cc93a.chunk.js","mappings":"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","sources":["components/PhonebookForm/Phonebook.styled.js","components/Section/Sectio.styled.js","components/Section/Section.js","redux/contacts/selectors.js","components/PhonebookForm/PhonebookForm.js","components/Contacts/Contacts.styled.js","components/ButtonDelete/ButtonDelete.styled.js","components/Spinner/Spinner.styled.js","components/Spinner/Spinner.js","components/ButtonDelete/ButtonDelete.js","components/Contacts/Contacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Message/Message.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LabelName = styled.p`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  justify-content: center;\n  padding: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n\n  &:active {\n    background-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n","import { Box } from 'components/Box/Box';\nimport PropTypes from 'prop-types';\nimport { Title } from './Sectio.styled';\n\nexport const Section = ({ title, children }) => (\n  <Box as=\"section\" p={4} mx=\"auto\" width=\"400px\" position=\"relative\">\n    <Title>{title}</Title>\n    {children}\n  </Box>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilterName = state => state.contacts.filter;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectErrorMessage = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterName],\n  (contacts, filterName) => {\n    const filterNameNormalized = filterName.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterNameNormalized)\n    );\n  }\n);\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\nimport * as yup from 'yup';\nimport { LabelName, AddButton } from './Phonebook.styled';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nconst ErrorText = styled(ErrorMessage)`\n  color: red;\n`;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .strict()\n    .trim()\n    .min(1)\n    .max(30)\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces'\n    )\n    .required(),\n  number: yup\n    .string()\n    .strict()\n    .trim()\n    .matches(\n      /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{2}\\)?)\\s?-?\\s?(\\(?\\d{2}\\)?)?$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const PhonebookForm = ({ onAddContact, onReviewName }) => {\n  const loading = useSelector(selectLoading);\n  const handleSubmit = (values, actions) => {\n    if (onReviewName(values.name)) {\n      alert(`${values.name} is already in contacts.`);\n      return;\n    }\n\n    onAddContact({ ...values });\n    actions.resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <label htmlFor=\"name\">\n          <LabelName>Name</LabelName>\n          <Field autoComplete=\"off\" type=\"text\" name=\"name\" />\n          <ErrorText component=\"p\" name=\"name\" />\n        </label>\n        <label htmlFor=\"number\">\n          <LabelName>Phone</LabelName>\n          <Field type=\"tel\" name=\"number\" />\n          <ErrorText component=\"p\" name=\"number\" />\n        </label>\n        <AddButton type=\"submit\" disabled={loading}>\n          Add contact\n        </AddButton>\n      </Form>\n    </Formik>\n  );\n};\n\nPhonebookForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  onReviewName: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Number = styled.p`\n  margin-top: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: relative;\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n\n  &:active {\n    background-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SpinnerWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24px;\n  height: 24px;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { SpinnerWrap } from './Spinner.styled';\n\nexport const Spinner = ({ loading, size }) => {\n  return (\n    <SpinnerWrap>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width={size}\n        visible={loading}\n      />\n    </SpinnerWrap>\n  );\n};\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from './ButtonDelete.styled';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport { selectErrorMessage } from 'redux/contacts/selectors';\n\nexport const ButtonDelete = ({ onRemoveContact, id, children }) => {\n  const [loading, setLoading] = useState(false);\n  const error = useSelector(selectErrorMessage);\n  if (error) {\n    setLoading(false);\n  }\n  return (\n    <Button\n      type=\"button\"\n      disabled={loading}\n      onClick={() => {\n        setLoading(true);\n        onRemoveContact(id);\n      }}\n    >\n      <Spinner loading={loading} size={'24'} />\n      {children}\n    </Button>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box/Box';\nimport { Number } from './Contacts.styled';\nimport { ButtonDelete } from 'components/ButtonDelete/ButtonDelete';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const Contacts = ({ onRemoveContact }) => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <Box as=\"ul\" py={4}>\n      {visibleContacts.map(({ name, number, id }) => (\n        <Box\n          as=\"li\"\n          p={3}\n          display=\"flex\"\n          width=\"300px\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          key={id}\n        >\n          <div>\n            <h3>{name}</h3>\n            <Number>{number}</Number>\n          </div>\n          <ButtonDelete onRemoveContact={onRemoveContact} id={id}>\n            Delete\n          </ButtonDelete>\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nContacts.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FilterHeader = styled.p`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n","import PropTypes from 'prop-types';\nimport { FilterHeader } from './Filter.styled';\n\nexport const Filter = ({ filterHeader, value, onChange }) => {\n  return (\n    <>\n      <label htmlFor=\"filter\">\n        <FilterHeader>{filterHeader}</FilterHeader>\n        <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  filterHeader: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box/Box';\n\nexport const Message = ({ message }) => {\n  return (\n    <Box as=\"p\" p={4} color={'red'}>\n      {message}\n    </Box>\n  );\n};\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Section } from 'components/Section/Section';\nimport { PhonebookForm } from 'components/PhonebookForm/PhonebookForm';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport { filter } from 'redux/contacts/contactsSlice';\nimport { operations, selectors } from 'redux/contacts';\nimport { Message } from 'components/Message/Message';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectors.selectContacts);\n  const name = useSelector(selectors.selectFilterName);\n  const loading = useSelector(selectors.selectLoading);\n  const messageError = useSelector(selectors.selectErrorMessage);\n  const visibleContacts = useSelector(selectors.selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  const reviewNameInContacts = name => {\n    return contacts.find(contact => contact.name === name);\n  };\n\n  const addContact = contact => {\n    dispatch(operations.addNewContact(contact));\n  };\n\n  const removeContact = removeContactId => {\n    dispatch(operations.deleteContact(removeContactId));\n  };\n\n  const changeFilter = e => {\n    dispatch(filter(e.currentTarget.value.trimStart()));\n  };\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <PhonebookForm\n          onAddContact={addContact}\n          onReviewName={reviewNameInContacts}\n        />\n        <Spinner loading={loading} size={'56'} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter\n          filterHeader=\"Find contacts by name\"\n          value={name}\n          onChange={changeFilter}\n        />\n        {messageError && <Message message={messageError} />}\n        {visibleContacts.length > 0 && (\n          <Contacts onRemoveContact={removeContact} />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["LabelName","styled","p","theme","space","AddButton","radii","sm","colors","accent","Title","Section","title","children","Box","as","mx","width","position","selectContacts","state","contacts","items","selectFilterName","filter","selectLoading","isLoading","selectErrorMessage","error","selectVisibleContacts","createSelector","filterName","filterNameNormalized","toLowerCase","contact","name","includes","ErrorText","ErrorMessage","schema","yup","shape","strict","trim","min","max","matches","required","number","initialValues","PhonebookForm","onAddContact","onReviewName","loading","useSelector","validationSchema","onSubmit","values","actions","alert","resetForm","htmlFor","autoComplete","type","component","disabled","Number","fontSizes","s","Button","SpinnerWrap","Spinner","size","strokeColor","strokeWidth","animationDuration","visible","ButtonDelete","onRemoveContact","id","useState","setLoading","onClick","Contacts","visibleContacts","py","map","display","justifyContent","alignItems","FilterHeader","Filter","filterHeader","value","onChange","Message","message","color","dispatch","useDispatch","selectors","messageError","useEffect","operations","fetchContacts","addNewContact","find","e","currentTarget","trimStart","length","removeContactId","deleteContact"],"sourceRoot":""}