{"version":3,"file":"static/js/960.618b28f4.chunk.js","mappings":"yNAEaA,EAAYC,EAAAA,GAAAA,EAAH,iDACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPC,EAAYJ,EAAAA,GAAAA,OAAH,2MAGT,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,EAAlB,IAII,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,OAAOC,MAAnB,G,iKCJnBC,GAAYT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,uCAITW,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,SAASC,OAAOF,QAAQG,WAC5CC,SAAUN,EAAAA,KAAaG,SAASC,OAAOG,IAAI,GAAGC,IAAI,IAAIH,aAGlDI,EAAgB,CACpBP,MAAO,GACPI,SAAU,IAGCI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBd,EAClBe,SARiB,SAACC,EAAQC,GAC5BL,GAASM,EAAAA,EAAAA,KAAM,UAAKF,KACpBC,EAAQE,WACT,EAEC,UAKE,UAAC,KAAD,YACE,mBAAOC,QAAQ,QAAf,WACE,SAAC,IAAD,qBACA,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,WACzB,SAACxB,EAAD,CAAWyB,UAAU,IAAID,KAAK,cAEhC,mBAAOF,QAAQ,WAAf,WACE,SAAC,IAAD,wBACA,SAAC,KAAD,CAAOC,KAAK,WAAWC,KAAK,cAC5B,SAACxB,EAAD,CAAWyB,UAAU,IAAID,KAAK,iBAEhC,SAAC,IAAD,CACED,KAAK,SADP,wBASP,EC/CD,EATkB,WAChB,OACE,4BACE,uCACA,SAACV,EAAD,MAGL,C","sources":["components/PhonebookForm/Phonebook.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LabelName = styled.p`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  justify-content: center;\n  padding: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n\n  &:active {\n    background-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  LabelName,\n  AddButton,\n} from 'components/PhonebookForm/Phonebook.styled';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/operations';\n// import { useAuth } from 'hooks/useAuth';\n\nconst ErrorText = styled(ErrorMessage)`\n  color: red;\n`;\n\nconst schema = yup.object().shape({\n  email: yup.string().strict().trim().email().required(),\n  password: yup.string().strict().trim().min(6).max(30).required(),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  // const loading = useSelector(selectLoading);\n  const handleSubmit = (values, actions) => {\n    dispatch(login({ ...values }));\n    actions.resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <label htmlFor=\"email\">\n          <LabelName>Email</LabelName>\n          <Field type=\"email\" name=\"email\" />\n          <ErrorText component=\"p\" name=\"email\" />\n        </label>\n        <label htmlFor=\"password\">\n          <LabelName>Password</LabelName>\n          <Field type=\"password\" name=\"password\" />\n          <ErrorText component=\"p\" name=\"password\" />\n        </label>\n        <AddButton\n          type=\"submit\"\n          // disabled={loading}\n        >\n          Log In\n        </AddButton>\n      </Form>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <p>Login Form</p>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["LabelName","styled","p","theme","space","AddButton","radii","sm","colors","accent","ErrorText","ErrorMessage","schema","yup","shape","email","strict","trim","required","password","min","max","initialValues","LoginForm","dispatch","useDispatch","validationSchema","onSubmit","values","actions","login","resetForm","htmlFor","type","name","component"],"sourceRoot":""}