{"version":3,"file":"static/js/960.8df7f362.chunk.js","mappings":"wRAGaA,EAAQC,EAAAA,GAAAA,MAAH,8HAKG,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITC,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,oNACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAAwB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGxB,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IACJ,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,QAAQC,CAApB,IACM,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,MAAMC,EAAlB,IACF,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,OAAOC,WAAnB,IAGC,SAAAZ,GAAC,OAAIA,EAAEC,MAAMU,OAAOE,MAAnB,IAIRC,EAAYf,EAAAA,GAAAA,EAAH,iDACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAgBPa,GAAYhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,0DACX,SAAAC,GAAC,OAAIA,EAAEC,MAAMU,OAAOM,GAAnB,IACG,SAAAjB,GAAC,OAAIA,EAAEC,MAAMI,UAAUa,EAAtB,G,sJChCVC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,SAASC,OAAOF,QAAQG,WAC5CC,SAAUN,EAAAA,KAAaG,SAASC,OAAOG,IAAI,GAAGC,IAAI,IAAIH,aAGlDI,EAAgB,CACpBP,MAAO,GACPI,SAAU,IAGCI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBd,EAClBe,SARiB,SAACC,EAAQC,GAC5BL,GAASM,EAAAA,EAAAA,KAAM,UAAKF,KACpBC,EAAQE,WACT,EAEC,UAKE,UAAC,KAAD,YACE,mBAAOC,QAAQ,QAAf,WACE,SAAC,KAAD,qBACA,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,WACzB,SAAC,IAAD,CAAWC,UAAU,IAAID,KAAK,cAEhC,mBAAOF,QAAQ,WAAf,WACE,SAAC,KAAD,wBACA,SAAC,KAAD,CAAOC,KAAK,WAAWC,KAAK,cAC5B,SAAC,IAAD,CAAWC,UAAU,IAAID,KAAK,iBAEhC,SAACE,EAAA,EAAD,yBAUP,EC9CD,EATkB,WAChB,OACE,4BACE,uCACA,SAACb,EAAD,MAGL,C","sources":["components/PhonebookForm/Phonebook.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const Label = styled.label`\n  display: inline-block;\n\n  /* & :last-child {\n    color: red;\n    margin-bottom: ${p => p.theme.space[4]}px;\n  } */\n`;\n\nexport const Input = styled(Field)`\n  padding: ${p => p.theme.space[0]} ${p => p.theme.space[3]}px;\n  width: 320px;\n  height: 30px;\n  font-size: ${p => p.theme.fontSizes.s};\n  border: ${p => p.theme.borders.m};\n  border-radius: ${p => p.theme.radii.sm};\n  border-color: ${p => p.theme.colors.bgSecondary};\n\n  &:focus-within {\n    border-color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const LabelName = styled.p`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\n// export const AddButton = styled.button`\n//   display: flex;\n//   justify-content: center;\n//   padding: ${p => p.theme.space[3]}px;\n//   margin-top: ${p => p.theme.space[4]}px;\n//   border-radius: ${p => p.theme.radii.sm};\n//   cursor: pointer;\n\n//   &:active {\n//     background-color: ${p => p.theme.colors.accent};\n//   }\n// `;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.red};\n  font-size: ${p => p.theme.fontSizes.xs};\n`;\n","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { LabelName, Input, ErrorText } from 'components/PhonebookForm/Phonebook.styled';\n// import styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/operations';\nimport { Button } from 'components/Button/Button';\n// import { useAuth } from 'hooks/useAuth';\n\n// const ErrorText = styled(ErrorMessage)`\n//   color: red;\n// `;\n\nconst schema = yup.object().shape({\n  email: yup.string().strict().trim().email().required(),\n  password: yup.string().strict().trim().min(6).max(30).required(),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  // const loading = useSelector(selectLoading);\n  const handleSubmit = (values, actions) => {\n    dispatch(login({ ...values }));\n    actions.resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <label htmlFor=\"email\">\n          <LabelName>Email</LabelName>\n          <Input type=\"email\" name=\"email\" />\n          <ErrorText component=\"p\" name=\"email\" />\n        </label>\n        <label htmlFor=\"password\">\n          <LabelName>Password</LabelName>\n          <Input type=\"password\" name=\"password\" />\n          <ErrorText component=\"p\" name=\"password\" />\n        </label>\n        <Button>Log In</Button>\n        {/* <AddButton\n          type=\"submit\"\n          // disabled={loading}\n        >\n          Log In\n        </AddButton> */}\n      </Form>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <p>Login Form</p>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Label","styled","p","theme","space","Input","Field","fontSizes","s","borders","m","radii","sm","colors","bgSecondary","accent","LabelName","ErrorText","ErrorMessage","red","xs","schema","yup","shape","email","strict","trim","required","password","min","max","initialValues","LoginForm","dispatch","useDispatch","validationSchema","onSubmit","values","actions","login","resetForm","htmlFor","type","name","component","Button"],"sourceRoot":""}